///////a system such that it comprises of a potentiometer which is connected to one
controller. Transfer data on a LCD on another controller using USART. Write the
code for the system///////

Transmitter:
#define F_CPU 16000000UL // 16 MHz clock speed
#include <avr/io.h>
#include <util/delay.h>
int main(void)
{
DDRF = 0x00;
UCSR0B = (1 << TXEN0); // Enable Transmit
UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // 8 bit data
UBRR0 = 255; // Set UBRR for a baud rate of
9600 (for F_CPU = 16MHz)
ADCSRA = 0x87; // make ADC enable and select ck/128
ADMUX = 0xC0; // Vref, ADC0, right-justified
while (1)
{
ADCSRA |= (1 << ADSC); // start conversion
while ((ADCSRA & (1 << ADIF)) == 0); // wait for end of
conversion
ADCSRA |= (1 << ADIF); // clear the ADIF flag
unsigned int x = (ADCL | (ADCH << 8));
while (!(UCSR0A & (1 << UDRE0))); // wait until UDR0 is empty
UDR0 = x; // transmit the number
}
}
Recevier:
#ifndef F_CPU
#define F_CPU 16000000UL // 16 MHz clock speed
#endif
#include <stdlib.h>
#define D0 eS_PORTC0
#define D1 eS_PORTC1
#define D2 eS_PORTC2
#define D3 eS_PORTC3
#define D4 eS_PORTC4
#define D5 eS_PORTC5
#define D6 eS_PORTC6
#define D7 eS_PORTC7
#define RS eS_PORTD0
#define EN eS_PORTD1
#include <avr/io.h>
#include <util/delay.h>
#include "lcd.h"
int main (void)
{
unsigned char A[10];
DDRD = 0xFF;
DDRC = 0xFF;
Lcd8_Init();

while (1){
UCSR0B = (1<<RXEN0); //Enable Receive
UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); //8 bit data
UBRR0 = 255; //Set UBRR to get specified Baud Rate
while (1)
{while(!(UCSR0A & (1<<RXC0))); //wait for new data
int count = UDR0;

itoa(count,A,10);
Lcd8_Set_Cursor(1,0);
Lcd8_Write_String("ADC: ");
Lcd8_Write_String(A);

}
}
}
